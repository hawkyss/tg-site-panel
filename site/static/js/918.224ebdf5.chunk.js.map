{"version":3,"file":"static/js/918.224ebdf5.chunk.js","mappings":"6whHAOQA,EAAgCC,EAAAA,SAAtBC,EAAsBD,EAAAA,UAAXE,EAAWF,EAAAA,OAgEtC,EA9Dc,WACZ,MAAoCD,EAAS,IAA7C,eAAmBI,GAAnB,WACA,EAAoCJ,EAAS,KAA7C,eAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAkCN,GAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAUN,IAGjBD,GAAU,WACPO,EAAQC,QAAQC,WAAWC,YAAa,EACxCH,EAAQC,QAAQC,WAAWE,YAAa,EACxCJ,EAAQC,QAAQC,WAAWG,gBAAkB,CAC/C,GAAE,IAEFZ,GAAU,WACJa,OAAOC,YAAc,MACtBV,EAAc,KAGbS,OAAOC,YAAc,MACtBV,EAAc,KACdE,GAAa,IAGZO,OAAOC,YAAc,KACtBV,EAAc,KAGjBW,QAAQC,IAAIH,OAAOC,YAEnB,IAEIG,EAAa,GAFCC,EAGLC,SAASC,SAAQ,YAA+B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACxCD,EAASE,YAAYH,SAAQ,SAAAI,GAAM,OAAIP,EAAWQ,KAAK,CAAED,OAAAA,EAAQF,WAAAA,GAA9B,GACrC,IAEDpB,EAAce,EAEf,GAAE,IAIH,OAAOZ,IAAa,SAAC,IAAD,CAAOqB,UAAU,MACnCC,gBAAgB,OAChBC,cAAeC,EAEfC,UAAW,CANM,CAAEC,IAAK,GAAIC,IAAK,IAOjCC,aAAc,IACdC,UAAW,iBAAM,SAAN,EACXC,cAAe,IACfC,qBAAsB,GACtBC,iBAAkB,IAClBC,IAAK/B,EACLgC,MAAOpC,EACPqC,OAAQrC,EACRsC,gBAAgB,EAChBC,gBAAiB,UACjBC,mBAAoB,IAEvB,C","sources":["components/Home/Description/World.js"],"sourcesContent":["import React from \"react\";\nimport Globe from 'react-globe.gl'\nimport earthMap from '../../../assets/img/map_h.webp';\nimport earthData from '../../../assets/earth-data/cable-geo.json'\n\n\n\nconst { useState, useEffect, useRef } = React;\n\n  const World = () => {\n    const [cablePaths, setCablePaths] = useState([]);\n    const [globalSize, setGlobalSize] = useState(400);\n    const [showEarth, setShowEarth] = useState(true);\n\n    const globeEl = useRef();\n\n\n   useEffect(() => {\n      globeEl.current.controls().enableZoom = false;\n      globeEl.current.controls().autoRotate = true;\n      globeEl.current.controls().autoRotateSpeed = 9;\n   }, []);\n\n    useEffect(() => {\n      if (window.innerWidth <= 1100) {\n         setGlobalSize(300)\n      }\n\n      if (window.innerWidth <= 990) {\n         setGlobalSize(400)\n         setShowEarth(false)\n      }\n\n      if (window.innerWidth <= 440) {\n         setGlobalSize(300)\n      }\n\n      console.log(window.innerWidth)\n\n      const cablesGeo = earthData\n\n      let cablePaths = [];\n         cablesGeo.features.forEach(({ geometry, properties }) => {\n         geometry.coordinates.forEach(coords => cablePaths.push({ coords, properties }));\n      });\n\n      setCablePaths(cablePaths);\n\n    }, []);\n\n    const shieldRing = { lat: 90, lng: 0 };\n\n    return showEarth && <Globe className=\"ert\"\n      backgroundColor=\"#fff\"\n      globeImageUrl={earthMap}\n      // bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n      ringsData={[shieldRing]}\n      ringAltitude={0.25}\n      ringColor={() => '#1B9CFC'}\n      ringMaxRadius={180}\n      ringPropagationSpeed={20}\n      ringRepeatPeriod={250}\n      ref={globeEl}\n      width={globalSize}\n      height={globalSize}\n      showAtmosphere={true}\n      atmosphereColor={'#093BB9'}\n      atmosphereAltitude={0.2}\n    />;\n  };\n\n  export default World"],"names":["useState","React","useEffect","useRef","setCablePaths","globalSize","setGlobalSize","showEarth","setShowEarth","globeEl","current","controls","enableZoom","autoRotate","autoRotateSpeed","window","innerWidth","console","log","cablePaths","earthData","features","forEach","geometry","properties","coordinates","coords","push","className","backgroundColor","globeImageUrl","earthMap","ringsData","lat","lng","ringAltitude","ringColor","ringMaxRadius","ringPropagationSpeed","ringRepeatPeriod","ref","width","height","showAtmosphere","atmosphereColor","atmosphereAltitude"],"sourceRoot":""}